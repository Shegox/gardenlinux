#!/usr/bin/env bash

check_rootdir() {
	local d=$1
	if [[ -z "$d" ]]; then
		echo "FATAL: variable is not defined, exiting!"
		return 1
	fi
	if [[ ! -d "$d" ]]; then
		echo "FATAL: the directory doesn't exist, exiting!"
		return 1
	fi
	if [[ $(shopt -s nullglob dotglob; f=("${d}"/*); echo ${#f[@]}) -eq 0 ]]; then
		echo "FATAL: the directory is empty, exiting!"
		return 1
	fi 
}

run_in_chroot() {
	local rootfsDir=$1
	local script=$2
	local deps=${@:3}

	thisDir=$(readlink -f $(dirname "${BASH_SOURCE[0]}"))

	if [[ -z "${script}" || ! -f "${thisDir}/${script}" ]]; then
		echo "FATAL: ${script} script to execute doesn't exist or wasn't provided!"
		return 1
	fi

	# copy script and dependencies 
	for dep in $(echo "${script} ${deps}"); do
		cp "${thisDir}"/$dep "$rootfsDir/tmp/"
	done

	mnts="dev proc sys"
	set +u
	if [ ! -z "$SKIPDEV" ]; then
		mnts="proc sys"	
	fi
	set -u
	export rootfsDir script mnts
	if out=$(unshare --mount bash -Eeuo pipefail -c '
	for dir in $mnts; do
		if [ -e "$rootfsDir/$dir" ]; then
			mount --rbind "/$dir" "$rootfsDir/$dir"
		fi
	done
	mount --rbind --read-only /etc/resolv.conf "$rootfsDir/etc/resolv.conf"
	exec chroot "$rootfsDir" /usr/bin/env -i PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" bash /tmp/${script}')
	then
		rc=0
	else
		rc=1
	fi
	echo "$out"
	for dep in $(echo "${script} ${deps}"); do
		rm -f "$rootfsDir/tmp/$dep"
	done
	return $rc
}
